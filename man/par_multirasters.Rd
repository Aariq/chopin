% Generated by roxygen2: do not edit by hand
% Please edit documentation in chopin_rmarkdown_litr.rmd.
\name{par_multirasters}
\alias{par_multirasters}
\title{Process a given function over multiple large rasters}
\usage{
par_multirasters(filenames, debug = FALSE, fun_dist, ...)
}
\arguments{
\item{filenames}{character(n). A vector or list of
full file paths of raster files. n is the total number of raster files.}

\item{debug}{logical(1). Prints error messages
if there were any errors during the calculation.}

\item{fun_dist}{sf, terra, or chopin functions.}

\item{...}{Arguments passed to the argument \code{fun_dist}.}
}
\value{
a data.frame object with computation results.
For entries of the results,
consult the function used in \code{fun_dist} argument.
}
\description{
Large raster files usually exceed the memory capacity in size.
Cropping a large raster into a small subset even consumes
a lot of memory and adds processing time.
This function leverages \code{terra} \code{SpatRaster} proxy
to distribute computation jobs over multiple cores.
It is assumed that users have multiple large raster files
in their disk, then each file path is assigned to a thread.
Each thread will directly read raster values from
the disk using C++ pointers that operate in terra functions.
For use, it is strongly recommended to use vector data with
small and confined spatial extent for computation to avoid
out-of-memory error. For this, users may need
to make subsets of input vector objects in advance.
}
\examples{
\dontrun{
library(future)
plan(multicore, workers = 4)
# Does not run ...
# par_multirasters()
}
}
\author{
Insang Song \email{geoissong@gmail.com}
}