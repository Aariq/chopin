% Generated by roxygen2: do not edit by hand
% Please edit documentation in chopin_rmarkdown_litr.rmd.
\name{par_hierarchy}
\alias{par_hierarchy}
\title{Process a given function using a hierarchy in input data}
\usage{
par_hierarchy(
  regions,
  split_level = NULL,
  debug = FALSE,
  combine = dplyr::bind_rows,
  fun_dist,
  ...
)
}
\arguments{
\item{regions}{sf/SpatVector object.
Computational regions. Only polygons are accepted.}

\item{split_level}{character(nrow(regions)) or character(1).
The regions will be split by the common level value.
The level should be higher than the original data level.
A field name with the higher level information is also accepted.}

\item{debug}{logical(1). Prints error messages
if there were any errors during the calculation.}

\item{combine}{function. The function to combine the results.}

\item{fun_dist}{sf, terra, or chopin functions.}

\item{...}{Arguments passed to the argument \code{fun_dist}.
The \strong{second} place should get a vector or raster dataset from which
you want to extract or calculate values. For example, a raster dataset
when vector-raster overlay is performed.}
}
\value{
a data.frame object with computation results.
For entries of the results, consult the function used in
\code{fun_dist} argument.
}
\description{
"Hierarchy" refers to a system,
which divides the entire study region into multiple subregions.
It is oftentimes reflected in an area code system
(e.g., FIPS for US Census geographies, HUC-4, -6, -8, etc.).
\link[future:multicore]{future::multicore}, \link[future:multisession]{future::multisession}, \link[future:cluster]{future::cluster}
with \link[doParallel:registerDoParallel]{doParallel::registerDoParallel} will parallelize the work
in each grid. For details of the terminology in \code{future} package,
refer to \link[future]{plan}.
This function assumes that users have one raster file and
a sizable and spatially distributed target locations.
Each thread will process the number of lower level features
in each higher level feature. Please be advised that
accessing the same file simultaneously with
multiple processes may result in errors.
}
\note{
In dynamic dots (\code{...}), the first and second
arguments should be the \code{fun_dist} arguments where
\code{sf}/\code{SpatVector} objects are accepted.
Virtually any \code{sf}/\code{terra} functions that accept two arguments
can be put in \code{fun_dist}, but please be advised that
some spatial operations do not necessarily give the
exact result from what would have been done single-thread.
For example, distance calculated through this function may return the
lower value than actual because the computational region was reduced.
This would be the case especially where the target features
are spatially sparsely distributed.
}
\examples{
\dontrun{
library(terra)
library(sf)
library(chopin)
library(future)
library(doFuture)
sf::sf_use_s2(FALSE)
registerDoFuture()
plan(multicore)

ncpath <- system.file("extdata/nc_hierarchy.gpkg", package = "chopin")
nccnty <- terra::vect(ncpath, layer = "county")
nctrct <- sf::st_read(ncpath, layer = "tracts")
nctrct <- terra::vect(nctrct)
ncelev <-
  terra::unwrap(
    readRDS(
      system.file("extdata/nc_srtm15_otm.rds", package = "chopin")
    )
  )
terra::crs(ncelev) <- "EPSG:5070"
names(ncelev) <- c("srtm15")

ncsamp <-
  terra::spatSample(
    terra::ext(ncelev),
    1e4L,
    lonlat = FALSE,
    as.points = TRUE
  )
ncsamp$kid <- sprintf("K-\%05d", seq(1, nrow(ncsamp)))
res <-
  par_hierarchy(
    regions = nccnty,
    split_level = "GEOID",
    fun_dist = extract_at_poly,
    polys = nctrct,
    surf = ncelev,
    id = "GEOID",
    func = "mean"
  )
)
}
}
\seealso{
Other Parallelization: 
\code{\link{par_cut_coords}()},
\code{\link{par_fallback}()},
\code{\link{par_grid}()},
\code{\link{par_group_grid}()},
\code{\link{par_make_grid}()},
\code{\link{par_make_gridset}()},
\code{\link{par_merge_grid}()},
\code{\link{par_multirasters}()}
}
\author{
Insang Song \email{geoissong@gmail.com}
}
\concept{Parallelization}