
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "scomps"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('scomps')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("aw_covariates")
> ### * aw_covariates
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: aw_covariates
> ### Title: Computing area weighted covariates using two polygon sf or
> ###   SpatVector objects
> ### Aliases: aw_covariates
> 
> ### ** Examples
> 
> # package
> library(sf)
Linking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE
> 
> # run
> nc = sf::st_read(system.file("shape/nc.shp", package="sf"))
Reading layer `nc' from data source 
  `/Users/songi2/Library/R/arm64/4.3/library/sf/shape/nc.shp' 
  using driver `ESRI Shapefile'
Simple feature collection with 100 features and 14 fields
Geometry type: MULTIPOLYGON
Dimension:     XY
Bounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965
Geodetic CRS:  NAD27
> nc = sf::st_transform(nc, 5070)
> pp = sf::st_sample(nc, size = 300)
> pp = sf::st_as_sf(pp)
> pp[["id"]] = seq(1, nrow(pp))
> sf::st_crs(pp) = "EPSG:5070"
> ppb = sf::st_buffer(pp, nQuadSegs=180, dist = units::set_units(20, 'km'))
> 
> system.time({ppb_nc_aw = aw_covariates(ppb, nc, 'id')})
Warning in st_interpolate_aw.sf(poly_weight[, index_numeric], poly_in, extensive = FALSE) :
  st_interpolate_aw assumes attributes are constant or uniform over areas of x
   user  system elapsed 
  0.180   0.003   0.183 
> summary(ppb_nc_aw)
      AREA           PERIMETER         CNTY_         CNTY_ID    
 Min.   :0.06133   Min.   :1.114   Min.   :1825   Min.   :1825  
 1st Qu.:0.12008   1st Qu.:1.549   1st Qu.:1917   1st Qu.:1917  
 Median :0.13834   Median :1.685   Median :2000   Median :2000  
 Mean   :0.14702   Mean   :1.777   Mean   :2004   Mean   :2004  
 3rd Qu.:0.17292   3rd Qu.:1.978   3rd Qu.:2078   3rd Qu.:2078  
 Max.   :0.24000   Max.   :3.588   Max.   :2241   Max.   :2241  
     FIPSNO         CRESS_ID          BIR74             SID74       
 Min.   :37009   Min.   : 5.042   Min.   :  315.1   Min.   : 0.000  
 1st Qu.:37075   1st Qu.:38.024   1st Qu.: 1955.4   1st Qu.: 4.015  
 Median :37104   Median :52.610   Median : 3124.2   Median : 6.867  
 Mean   :37103   Mean   :51.798   Mean   : 3977.7   Mean   : 8.529  
 3rd Qu.:37131   3rd Qu.:65.974   3rd Qu.: 4639.0   3rd Qu.:10.591  
 Max.   :37191   Max.   :95.910   Max.   :18561.5   Max.   :36.075  
    NWBIR74             BIR79             SID79           NWBIR79        
 Min.   :   6.222   Min.   :  403.3   Min.   : 0.000   Min.   :   4.222  
 1st Qu.: 458.022   1st Qu.: 2393.5   1st Qu.: 4.990   1st Qu.: 589.223  
 Median : 955.882   Median : 3903.2   Median : 8.036   Median :1189.908  
 Mean   :1285.378   Mean   : 5092.6   Mean   :10.052   Mean   :1655.747  
 3rd Qu.:1669.800   3rd Qu.: 5904.1   3rd Qu.:13.890   3rd Qu.:2127.972  
 Max.   :6467.572   Max.   :26115.7   Max.   :34.448   Max.   :9367.957  
          geometry  
 POLYGON      :300  
 epsg:5070    :  0  
 +proj=aea ...:  0  
                    
                    
                    
> #### Example of aw_covariates ends ####
> 
> 
> 
> cleanEx()

detaching ‘package:sf’

> nameEx("check_crs")
> ### * check_crs
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: check_crs
> ### Title: Check Coordinate Reference System
> ### Aliases: check_crs
> 
> ### ** Examples
> 
> # data
> library(sf)
Linking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE
> ncpath = system.file("shape/nc.shp", package = "sf")
> nc = read_sf(ncpath)
> check_crs(nc)
Coordinate Reference System:
  User input: NAD27 
  wkt:
GEOGCRS["NAD27",
    DATUM["North American Datum 1927",
        ELLIPSOID["Clarke 1866",6378206.4,294.978698213898,
            LENGTHUNIT["metre",1]]],
    PRIMEM["Greenwich",0,
        ANGLEUNIT["degree",0.0174532925199433]],
    CS[ellipsoidal,2],
        AXIS["latitude",north,
            ORDER[1],
            ANGLEUNIT["degree",0.0174532925199433]],
        AXIS["longitude",east,
            ORDER[2],
            ANGLEUNIT["degree",0.0174532925199433]],
    ID["EPSG",4267]]
> 
> 
> 
> 
> cleanEx()

detaching ‘package:sf’

> nameEx("get_computational_regions")
> ### * get_computational_regions
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_computational_regions
> ### Title: Get a set of computational regions
> ### Aliases: get_computational_regions
> 
> ### ** Examples
> 
> # data
> library(sf)
Linking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE
> ncpath = system.file("shape/nc.shp", package = "sf")
> nc = read_sf(ncpath)
> nc = st_transform(nc, "EPSG:5070")
> # run
> # nc_comp_region = get_computational_regions(nc, nx = 12, ny = 8)
> 
> 
> 
> 
> cleanEx()

detaching ‘package:sf’

> nameEx("grid_merge")
> ### * grid_merge
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: grid_merge
> ### Title: grid_merge: Merge grid polygons with given rules
> ### Aliases: grid_merge
> 
> ### ** Examples
> 
> # library(sf)
> # library(igraph)
> # ligrary(dplyr)
> # dg = sf::st_as_sfc(st_bbox(c(xmin = 0, ymin = 0, xmax = 8e5, ymax = 6e5)))
> # sf::st_crs(dg) = 5070
> # dgs = sf::st_as_sf(st_make_grid(dg, n = c(20, 15)))
> # dgs$CGRIDID = seq(1, nrow(dgs))
> #
> # dg_sample = st_sample(dg, kappa = 5e-9, mu = 15, scale = 20000, type = "Thomas")
> # sf::st_crs(dg_sample) = sf::st_crs(dg)
> # dg_merged = grid_merge(sf::st_as_sf(sss), dgs, 100)
> #### NOT RUN ####
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.684 0.035 0.72 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
